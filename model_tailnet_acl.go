/*
Tailscale API

Tailscale API spec

API version: 1.0
Contact: hello@opal.dev
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package opal

import (
	"encoding/json"
)

// TailnetACL struct for TailnetACL
type TailnetACL struct {
	TagOwners map[string]interface{} `json:"tagOwners,omitempty"`
	Ssh []SSHRule `json:"ssh,omitempty"`
	Acls []ACLRule `json:"acls,omitempty"`
	Tests []Test `json:"tests,omitempty"`
	Groups map[string]interface{} `json:"groups,omitempty"`
	Hosts map[string]interface{} `json:"hosts,omitempty"`
}

// NewTailnetACL instantiates a new TailnetACL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTailnetACL() *TailnetACL {
	this := TailnetACL{}
	return &this
}

// NewTailnetACLWithDefaults instantiates a new TailnetACL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTailnetACLWithDefaults() *TailnetACL {
	this := TailnetACL{}
	return &this
}

// GetTagOwners returns the TagOwners field value if set, zero value otherwise.
func (o *TailnetACL) GetTagOwners() map[string]interface{} {
	if o == nil || o.TagOwners == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TagOwners
}

// GetTagOwnersOk returns a tuple with the TagOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetTagOwnersOk() (map[string]interface{}, bool) {
	if o == nil || o.TagOwners == nil {
		return nil, false
	}
	return o.TagOwners, true
}

// HasTagOwners returns a boolean if a field has been set.
func (o *TailnetACL) HasTagOwners() bool {
	if o != nil && o.TagOwners != nil {
		return true
	}

	return false
}

// SetTagOwners gets a reference to the given map[string]interface{} and assigns it to the TagOwners field.
func (o *TailnetACL) SetTagOwners(v map[string]interface{}) {
	o.TagOwners = v
}

// GetSsh returns the Ssh field value if set, zero value otherwise.
func (o *TailnetACL) GetSsh() []SSHRule {
	if o == nil || o.Ssh == nil {
		var ret []SSHRule
		return ret
	}
	return o.Ssh
}

// GetSshOk returns a tuple with the Ssh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetSshOk() ([]SSHRule, bool) {
	if o == nil || o.Ssh == nil {
		return nil, false
	}
	return o.Ssh, true
}

// HasSsh returns a boolean if a field has been set.
func (o *TailnetACL) HasSsh() bool {
	if o != nil && o.Ssh != nil {
		return true
	}

	return false
}

// SetSsh gets a reference to the given []SSHRule and assigns it to the Ssh field.
func (o *TailnetACL) SetSsh(v []SSHRule) {
	o.Ssh = v
}

// GetAcls returns the Acls field value if set, zero value otherwise.
func (o *TailnetACL) GetAcls() []ACLRule {
	if o == nil || o.Acls == nil {
		var ret []ACLRule
		return ret
	}
	return o.Acls
}

// GetAclsOk returns a tuple with the Acls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetAclsOk() ([]ACLRule, bool) {
	if o == nil || o.Acls == nil {
		return nil, false
	}
	return o.Acls, true
}

// HasAcls returns a boolean if a field has been set.
func (o *TailnetACL) HasAcls() bool {
	if o != nil && o.Acls != nil {
		return true
	}

	return false
}

// SetAcls gets a reference to the given []ACLRule and assigns it to the Acls field.
func (o *TailnetACL) SetAcls(v []ACLRule) {
	o.Acls = v
}

// GetTests returns the Tests field value if set, zero value otherwise.
func (o *TailnetACL) GetTests() []Test {
	if o == nil || o.Tests == nil {
		var ret []Test
		return ret
	}
	return o.Tests
}

// GetTestsOk returns a tuple with the Tests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetTestsOk() ([]Test, bool) {
	if o == nil || o.Tests == nil {
		return nil, false
	}
	return o.Tests, true
}

// HasTests returns a boolean if a field has been set.
func (o *TailnetACL) HasTests() bool {
	if o != nil && o.Tests != nil {
		return true
	}

	return false
}

// SetTests gets a reference to the given []Test and assigns it to the Tests field.
func (o *TailnetACL) SetTests(v []Test) {
	o.Tests = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *TailnetACL) GetGroups() map[string]interface{} {
	if o == nil || o.Groups == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetGroupsOk() (map[string]interface{}, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *TailnetACL) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given map[string]interface{} and assigns it to the Groups field.
func (o *TailnetACL) SetGroups(v map[string]interface{}) {
	o.Groups = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *TailnetACL) GetHosts() map[string]interface{} {
	if o == nil || o.Hosts == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TailnetACL) GetHostsOk() (map[string]interface{}, bool) {
	if o == nil || o.Hosts == nil {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *TailnetACL) HasHosts() bool {
	if o != nil && o.Hosts != nil {
		return true
	}

	return false
}

// SetHosts gets a reference to the given map[string]interface{} and assigns it to the Hosts field.
func (o *TailnetACL) SetHosts(v map[string]interface{}) {
	o.Hosts = v
}

func (o TailnetACL) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TagOwners != nil {
		toSerialize["tagOwners"] = o.TagOwners
	}
	if o.Ssh != nil {
		toSerialize["ssh"] = o.Ssh
	}
	if o.Acls != nil {
		toSerialize["acls"] = o.Acls
	}
	if o.Tests != nil {
		toSerialize["tests"] = o.Tests
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.Hosts != nil {
		toSerialize["hosts"] = o.Hosts
	}
	return json.Marshal(toSerialize)
}

type NullableTailnetACL struct {
	value *TailnetACL
	isSet bool
}

func (v NullableTailnetACL) Get() *TailnetACL {
	return v.value
}

func (v *NullableTailnetACL) Set(val *TailnetACL) {
	v.value = val
	v.isSet = true
}

func (v NullableTailnetACL) IsSet() bool {
	return v.isSet
}

func (v *NullableTailnetACL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTailnetACL(val *TailnetACL) *NullableTailnetACL {
	return &NullableTailnetACL{value: val, isSet: true}
}

func (v NullableTailnetACL) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTailnetACL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


